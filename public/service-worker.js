/* Public service worker fallback - simple registration friendly fallback.
   The production service-worker.js will be generated by workbox injectManifest into build/.
*/
self.addEventListener('install', (e) => {
  self.skipWaiting();
});
self.addEventListener('activate', (e) => {
  self.clients.claim();
});
self.addEventListener('fetch', (e) => {
  // network-first fallback
  e.respondWith(fetch(e.request).catch(() => caches.match(e.request)));
});
